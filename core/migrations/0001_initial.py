# Generated by Django 4.0.3 on 2022-03-09 01:32

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions
import django.utils.timezone
import positions.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 500 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=500,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        error_messages={
                            "unique": "A user with that email address already exists."
                        },
                        help_text="Required. 500 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=500,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="email address",
                    ),
                ),
                ("inserted", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Division",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "old_sk_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The old primary id for the entry",
                        null=True,
                        unique=True,
                    ),
                ),
                ("inserted", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "hockey_canada_id",
                    models.PositiveBigIntegerField(
                        blank=True, help_text="HcID Value", null=True, unique=True
                    ),
                ),
                (
                    "hockey_canada_system_id",
                    models.CharField(
                        blank=True,
                        help_text="*_id value for api, not meant to be editable or seen by users. Backend only.",
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("age_from", models.PositiveIntegerField(default=0)),
                ("age_to", models.PositiveIntegerField(default=0)),
                ("weight", positions.fields.PositionField(default=-1)),
            ],
            options={
                "ordering": ["league", "weight"],
            },
        ),
        migrations.CreateModel(
            name="League",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "old_sk_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The old primary id for the entry",
                        null=True,
                        unique=True,
                    ),
                ),
                ("inserted", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "hockey_canada_id",
                    models.PositiveBigIntegerField(
                        blank=True, help_text="HcID Value", null=True, unique=True
                    ),
                ),
                (
                    "hockey_canada_system_id",
                    models.CharField(
                        blank=True,
                        help_text="*_id value for api, not meant to be editable or seen by users. Backend only.",
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("weight", positions.fields.PositionField(default=-1)),
            ],
            options={
                "ordering": ["season", "weight"],
            },
        ),
        migrations.CreateModel(
            name="PermissionOverrides",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "old_sk_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The old primary id for the entry",
                        null=True,
                        unique=True,
                    ),
                ),
                ("inserted", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("team_can_edit", models.BooleanField(default=True)),
                ("team_can_vote", models.BooleanField(default=False)),
                ("assigned_on", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Season",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "old_sk_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The old primary id for the entry",
                        null=True,
                        unique=True,
                    ),
                ),
                ("inserted", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "hockey_canada_id",
                    models.PositiveBigIntegerField(
                        blank=True, help_text="HcID Value", null=True, unique=True
                    ),
                ),
                (
                    "hockey_canada_system_id",
                    models.CharField(
                        blank=True,
                        help_text="*_id value for api, not meant to be editable or seen by users. Backend only.",
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("start", models.DateField(null=True)),
                ("end", models.DateField(null=True)),
                ("mbs_id", models.PositiveIntegerField(default=0)),
                ("gsi_id", models.PositiveIntegerField(default=0)),
            ],
            options={
                "ordering": ["start"],
            },
        ),
        migrations.CreateModel(
            name="SubDivision",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "old_sk_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The old primary id for the entry",
                        null=True,
                        unique=True,
                    ),
                ),
                ("inserted", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "hockey_canada_id",
                    models.PositiveBigIntegerField(
                        blank=True, help_text="HcID Value", null=True, unique=True
                    ),
                ),
                (
                    "hockey_canada_system_id",
                    models.CharField(
                        blank=True,
                        help_text="*_id value for api, not meant to be editable or seen by users. Backend only.",
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("weight", positions.fields.PositionField(default=-1)),
                ("body_checking", models.BooleanField(default=False)),
                (
                    "division",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subdivisions",
                        to="core.division",
                    ),
                ),
                (
                    "league",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subdivisions",
                        to="core.league",
                    ),
                ),
                (
                    "season",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subdivisions",
                        to="core.season",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddConstraint(
            model_name="season",
            constraint=models.CheckConstraint(
                check=models.Q(("end__gt", django.db.models.expressions.F("start"))),
                name="check_season_end_is_after_start_date",
            ),
        ),
        migrations.AddField(
            model_name="permissionoverrides",
            name="assigned_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="permissionoverrides",
            name="division",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="core.division",
            ),
        ),
        migrations.AddField(
            model_name="permissionoverrides",
            name="league",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="core.league",
            ),
        ),
        migrations.AddField(
            model_name="permissionoverrides",
            name="season",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="core.season",
            ),
        ),
        migrations.AddField(
            model_name="permissionoverrides",
            name="subdivision",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="core.subdivision",
            ),
        ),
    ]
