# Generated by Django 4.0.3 on 2022-03-12 20:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions
import django.utils.timezone
import positions.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "old_sk_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The old primary id for the entry",
                        null=True,
                        unique=True,
                    ),
                ),
                ("inserted", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "hockey_canada_id",
                    models.PositiveBigIntegerField(
                        blank=True, help_text="HcID Value", null=True, unique=True
                    ),
                ),
                (
                    "hockey_canada_system_id",
                    models.CharField(
                        blank=True,
                        help_text="*_id value for api, not meant to be editable or seen by users. Backend only.",
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("number", models.PositiveIntegerField(default=0)),
                (
                    "old_teamseason_id",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("players_has_changed_flag", models.BooleanField(default=False)),
                ("staff_has_changed_flag", models.BooleanField(default=False)),
                ("jersey_home", models.CharField(blank=True, max_length=255)),
                ("jersey_away", models.CharField(blank=True, max_length=255)),
                ("submitted", models.BooleanField(default=False)),
                ("submitted_date", models.DateTimeField(blank=True, null=True)),
                ("approved", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=True)),
                ("draft_start_position", models.PositiveIntegerField(default=1)),
                ("weight", positions.fields.PositionField(default=-1)),
                (
                    "division",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="teams",
                        to="core.division",
                    ),
                ),
                (
                    "inserted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_inserted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "league",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="teams",
                        to="core.league",
                    ),
                ),
                (
                    "season",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="teams",
                        to="core.season",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TeamStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "old_sk_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The old primary id for the entry",
                        null=True,
                        unique=True,
                    ),
                ),
                ("inserted", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated", models.DateTimeField(default=django.utils.timezone.now)),
                ("name", models.CharField(max_length=255)),
                ("weight", positions.fields.PositionField(default=0)),
                ("include_in_roster_export", models.BooleanField(default=True)),
                (
                    "considered_approved",
                    models.BooleanField(
                        default=False,
                        help_text="If a team is assigned this status, are they technically considered approved in hockey canada?",
                    ),
                ),
                (
                    "clear_changed_staff_players_flag",
                    models.BooleanField(default=False),
                ),
                (
                    "inserted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_inserted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Team Status",
                "verbose_name_plural": "Team Statuses",
                "ordering": ["weight"],
            },
        ),
        migrations.CreateModel(
            name="TeamStatusReason",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "old_sk_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The old primary id for the entry",
                        null=True,
                        unique=True,
                    ),
                ),
                ("inserted", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated", models.DateTimeField(default=django.utils.timezone.now)),
                ("name", models.CharField(max_length=255)),
                ("weight", positions.fields.PositionField(default=-1)),
                ("default", models.BooleanField(blank=True, default=None, null=True)),
                (
                    "inserted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_inserted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reasons",
                        to="team.teamstatus",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Team Status Reason",
                "verbose_name_plural": "Team Status Reasons",
                "ordering": ["weight", "name"],
            },
        ),
        migrations.CreateModel(
            name="TeamStatusLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "old_sk_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The old primary id for the entry",
                        null=True,
                        unique=True,
                    ),
                ),
                ("inserted", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "inserted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_inserted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "new_status",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="team.teamstatus",
                    ),
                ),
                (
                    "new_status_reason",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="team.teamstatusreason",
                    ),
                ),
                (
                    "old_status",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="team.teamstatus",
                    ),
                ),
                (
                    "old_status_reason",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="team.teamstatusreason",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="team.team"
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Team Status Log",
                "verbose_name_plural": "Team Status Logs",
                "ordering": ["inserted"],
            },
        ),
        migrations.CreateModel(
            name="TeamNote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "old_sk_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The old primary id for the entry",
                        null=True,
                        unique=True,
                    ),
                ),
                ("inserted", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "type",
                    models.CharField(
                        choices=[("ROSTER", "Roster"), ("PLAYER", "Player")],
                        default="ROSTER",
                        max_length=255,
                    ),
                ),
                ("note", models.TextField()),
                (
                    "inserted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_inserted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notes",
                        to="team.team",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Team Note",
                "verbose_name_plural": "Team Notes",
                "ordering": ["inserted"],
            },
        ),
        migrations.AddField(
            model_name="team",
            name="status",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="team.teamstatus"
            ),
        ),
        migrations.AddField(
            model_name="team",
            name="status_reason",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="team.teamstatusreason",
            ),
        ),
        migrations.AddField(
            model_name="team",
            name="subdivision",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="teams",
                to="core.subdivision",
            ),
        ),
        migrations.AddField(
            model_name="team",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="StaffType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "old_sk_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The old primary id for the entry",
                        null=True,
                        unique=True,
                    ),
                ),
                ("inserted", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated", models.DateTimeField(default=django.utils.timezone.now)),
                ("team_can_edit", models.BooleanField(default=True)),
                ("team_can_vote", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=255)),
                ("weight", positions.fields.PositionField(default=-1)),
                ("required", models.BooleanField(default=False)),
                (
                    "web_access",
                    models.BooleanField(
                        default=False,
                        help_text="Can a Staff record assigned with this StaffType be allowed to login?",
                    ),
                ),
                (
                    "change_causes_staff_flag_on_team_to_enable",
                    models.BooleanField(
                        default=True,
                        help_text="Does changing a Staff record assigned with this StaffType cause the team.staff_has_changed_flag to be True?",
                        verbose_name="Change causes team.staff_has_changed_flag set to True",
                    ),
                ),
                (
                    "inserted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_inserted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Staff Type",
                "verbose_name_plural": "Staff Types",
                "ordering": ["weight"],
            },
        ),
        migrations.CreateModel(
            name="StaffStatusReason",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "old_sk_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The old primary id for the entry",
                        null=True,
                        unique=True,
                    ),
                ),
                ("inserted", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated", models.DateTimeField(default=django.utils.timezone.now)),
                ("name", models.CharField(max_length=255)),
                ("weight", positions.fields.PositionField(default=0)),
                (
                    "inserted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_inserted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Team Staff Status Reason",
                "verbose_name_plural": "Team Staff Status Reasons",
                "ordering": ["weight"],
            },
        ),
        migrations.CreateModel(
            name="StaffStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "old_sk_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The old primary id for the entry",
                        null=True,
                        unique=True,
                    ),
                ),
                ("inserted", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated", models.DateTimeField(default=django.utils.timezone.now)),
                ("name", models.CharField(max_length=255)),
                ("weight", positions.fields.PositionField(default=-1)),
                ("include_in_roster_export", models.BooleanField(default=True)),
                (
                    "inserted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_inserted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Staff Status",
                "verbose_name_plural": "Staff Statuses",
                "ordering": ["weight"],
            },
        ),
        migrations.CreateModel(
            name="Staff",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "old_sk_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The old primary id for the entry",
                        null=True,
                        unique=True,
                    ),
                ),
                ("inserted", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated", models.DateTimeField(default=django.utils.timezone.now)),
                ("importer", models.BooleanField(default=False)),
                ("affiliate", models.BooleanField(default=False)),
                ("tryout", models.BooleanField(default=False)),
                ("registration_date", models.DateTimeField(blank=True, null=True)),
                ("release_date", models.DateTimeField(blank=True, null=True)),
                (
                    "division",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="staff",
                        to="core.division",
                    ),
                ),
                (
                    "inserted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_inserted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "league",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="staff",
                        to="core.league",
                    ),
                ),
                (
                    "season",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="staff",
                        to="core.season",
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="team.staffstatus",
                    ),
                ),
                (
                    "subdivision",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="staff",
                        to="core.subdivision",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="staff",
                        to="team.team",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="team.stafftype"
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="staff_assignments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Team Staff",
                "verbose_name_plural": "Team Staff",
            },
        ),
        migrations.AddConstraint(
            model_name="teamstatusreason",
            constraint=models.UniqueConstraint(
                django.db.models.expressions.F("status"),
                django.db.models.expressions.F("default"),
                name="teamstatusreason_status_default_uniqueness",
            ),
        ),
    ]
