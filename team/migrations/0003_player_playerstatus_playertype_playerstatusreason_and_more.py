# Generated by Django 4.0.3 on 2022-03-13 22:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions
import django.db.models.functions.text
import django.utils.timezone
import positions.fields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("core", "0003_package_package_package_name_uniqueness"),
        ("team", "0002_teamstatusreason_teamstatusreason_name_status_uniqueness"),
    ]

    operations = [
        migrations.CreateModel(
            name="Player",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "old_sk_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The old primary id for the entry",
                        null=True,
                        unique=True,
                    ),
                ),
                ("inserted", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "hockey_canada_system_id",
                    models.CharField(
                        blank=True,
                        help_text="*_id value for api, not meant to be editable or seen by users. Backend only.",
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                ("old_playerseasonid", models.IntegerField(blank=True, default=0)),
                (
                    "hand",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Right", "Right"),
                            ("Left", "Left"),
                            ("Ambi", "Ambi"),
                        ],
                        max_length=255,
                    ),
                ),
                ("active", models.BooleanField(default=True)),
                ("affiliate", models.BooleanField(default=False)),
                ("players_comments", models.TextField(blank=True)),
                ("old_body_checking", models.BooleanField(default=False)),
                ("player_class", models.CharField(blank=True, max_length=255)),
                ("player_category", models.CharField(blank=True, max_length=255)),
                ("player_division", models.CharField(blank=True, max_length=255)),
                ("player_group", models.CharField(blank=True, max_length=255)),
                ("signup_date", models.DateField(blank=True, null=True)),
                ("signup_status", models.CharField(blank=True, max_length=255)),
                (
                    "division",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="players",
                        to="core.division",
                    ),
                ),
                (
                    "inserted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_inserted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "league",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="players",
                        to="core.league",
                    ),
                ),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="players",
                        to="core.member",
                    ),
                ),
                (
                    "package",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="players",
                        to="core.package",
                    ),
                ),
            ],
            options={
                "verbose_name": "Player",
                "verbose_name_plural": "Players",
            },
        ),
        migrations.CreateModel(
            name="PlayerStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "old_sk_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The old primary id for the entry",
                        null=True,
                        unique=True,
                    ),
                ),
                ("inserted", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated", models.DateTimeField(default=django.utils.timezone.now)),
                ("name", models.CharField(max_length=255)),
                ("weight", positions.fields.PositionField(default=-1)),
                ("include_in_roster_export", models.BooleanField(default=True)),
                (
                    "default",
                    models.BooleanField(
                        blank=True, default=None, null=True, unique=True
                    ),
                ),
                (
                    "inserted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_inserted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Player Status",
                "verbose_name_plural": "Player Statuses",
                "ordering": ["weight"],
            },
        ),
        migrations.CreateModel(
            name="PlayerType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "old_sk_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The old primary id for the entry",
                        null=True,
                        unique=True,
                    ),
                ),
                ("inserted", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated", models.DateTimeField(default=django.utils.timezone.now)),
                ("name", models.CharField(max_length=255)),
                ("weight", positions.fields.PositionField(default=-1)),
                (
                    "default",
                    models.BooleanField(
                        blank=True, default=None, null=True, unique=True
                    ),
                ),
                (
                    "change_causes_player_flag_on_team_to_enable",
                    models.BooleanField(
                        default=True,
                        help_text="Does changing a Player record assigned with this PlayerType cause the team.player_has_changed_flag to be True?",
                        verbose_name="Change causes team.player_has_changed_flag set to True",
                    ),
                ),
                (
                    "inserted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_inserted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Player Type",
                "verbose_name_plural": "Player Types",
                "ordering": ["weight"],
            },
        ),
        migrations.CreateModel(
            name="PlayerStatusReason",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "old_sk_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The old primary id for the entry",
                        null=True,
                        unique=True,
                    ),
                ),
                ("inserted", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated", models.DateTimeField(default=django.utils.timezone.now)),
                ("name", models.CharField(max_length=255)),
                ("weight", positions.fields.PositionField(default=-1)),
                ("default", models.BooleanField(blank=True, default=None, null=True)),
                (
                    "inserted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_inserted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reasons",
                        to="team.playerstatus",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Team Player Status Reason",
                "verbose_name_plural": "Team Player Status Reasons",
                "ordering": ["weight"],
            },
        ),
        migrations.CreateModel(
            name="PlayerStatusLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "old_sk_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The old primary id for the entry",
                        null=True,
                        unique=True,
                    ),
                ),
                ("inserted", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "inserted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_inserted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "new_status",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="team.playerstatus",
                    ),
                ),
                (
                    "new_status_reason",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="team.playerstatusreason",
                    ),
                ),
                (
                    "old_status",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="team.playerstatus",
                    ),
                ),
                (
                    "old_status_reason",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="team.playerstatusreason",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="team.player"
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Player Status Log",
                "verbose_name_plural": "Player Status Logs",
                "ordering": ["inserted"],
            },
        ),
        migrations.CreateModel(
            name="PlayerPosition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "old_sk_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The old primary id for the entry",
                        null=True,
                        unique=True,
                    ),
                ),
                ("inserted", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated", models.DateTimeField(default=django.utils.timezone.now)),
                ("name", models.CharField(max_length=255)),
                ("weight", positions.fields.PositionField(default=-1)),
                ("left_wing", models.BooleanField(default=False)),
                ("centre", models.BooleanField(default=False)),
                ("right_wing", models.BooleanField(default=False)),
                ("left_defence", models.BooleanField(default=False)),
                ("right_defence", models.BooleanField(default=False)),
                ("goaltender", models.BooleanField(default=False)),
                ("forward", models.BooleanField(default=False)),
                ("defence", models.BooleanField(default=False)),
                (
                    "inserted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_inserted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Player Position",
                "verbose_name_plural": "Player Positions",
                "ordering": ["weight"],
            },
        ),
        migrations.AddField(
            model_name="player",
            name="position",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="players",
                to="team.playerposition",
            ),
        ),
        migrations.AddField(
            model_name="player",
            name="registered_position",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="team.playerposition",
            ),
        ),
        migrations.AddField(
            model_name="player",
            name="season",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="players",
                to="core.season",
            ),
        ),
        migrations.AddField(
            model_name="player",
            name="status",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="players",
                to="team.playerstatus",
            ),
        ),
        migrations.AddField(
            model_name="player",
            name="status_reason",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="players",
                to="team.playerstatusreason",
            ),
        ),
        migrations.AddField(
            model_name="player",
            name="subdivision",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="players",
                to="core.subdivision",
            ),
        ),
        migrations.AddField(
            model_name="player",
            name="team",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="players",
                to="team.team",
            ),
        ),
        migrations.AddField(
            model_name="player",
            name="type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="players",
                to="team.playertype",
            ),
        ),
        migrations.AddField(
            model_name="player",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="player",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="players",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddConstraint(
            model_name="playertype",
            constraint=models.UniqueConstraint(
                django.db.models.functions.text.Lower("name"),
                name="playertype_name_uniqueness",
            ),
        ),
        migrations.AddConstraint(
            model_name="playerstatusreason",
            constraint=models.UniqueConstraint(
                django.db.models.functions.text.Lower("name"),
                django.db.models.expressions.F("status"),
                name="playerstatusreason_name_status_uniqueness",
            ),
        ),
        migrations.AddConstraint(
            model_name="playerstatusreason",
            constraint=models.UniqueConstraint(
                django.db.models.expressions.F("status"),
                django.db.models.expressions.F("default"),
                name="playerstatusreason_status_default_uniqueness",
            ),
        ),
        migrations.AddConstraint(
            model_name="playerstatus",
            constraint=models.UniqueConstraint(
                django.db.models.functions.text.Lower("name"),
                name="playerstatus_name_uniqueness",
            ),
        ),
        migrations.AddConstraint(
            model_name="playerposition",
            constraint=models.UniqueConstraint(
                django.db.models.functions.text.Lower("name"),
                name="playerposition_name_uniqueness",
            ),
        ),
        migrations.AddConstraint(
            model_name="player",
            constraint=models.UniqueConstraint(
                django.db.models.expressions.F("team"),
                django.db.models.expressions.F("member"),
                name="player_team_member_uniqueness",
            ),
        ),
    ]
